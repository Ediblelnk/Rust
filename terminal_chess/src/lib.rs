pub struct Square {
    pub rank: u8,
    pub file: u8,
}

impl Square {
    pub fn is_white(&self) -> u8 {
        (self.rank + self.file) % 2
    }
}

pub const LAYERS: usize = 5;

pub const WHITE: usize = 1;
pub const BLACK: usize = 0;

pub const EMPTY: usize = 0;
pub const PAWN: usize = 1;
pub const KNIGHT: usize = 2;
pub const BISHOP: usize = 3;
pub const ROOK: usize = 4;
pub const QUEEN: usize = 5;
pub const KING: usize = 6;

#[rustfmt::skip]
const BOARD_ASCII: [[[[&str; 7]; 5]; 2]; 2] = [
    [
        [
            [r"            ", r"            ", r"            ", r"            ", r"            ", r"    _ww_    ", r"    \++/    "],
            [r"            ", r"            ", r"    __,,    ", r"     <>     ", r"    UUUU    ", r"    \  /    ", r"    (  )    "],
            [r"            ", r"     ()     ", r"   L   \~   ", r"     /\     ", r"    |  |    ", r"    |  |    ", r"    |  |    "],
            [r"            ", r"     {}     ", r"     ) (    ", r"    \  /    ", r"    |  |    ", r"    /  \    ", r"    /  \    "],
            [r"            ", r"    {__}    ", r"   {____}   ", r"   {____}   ", r"   {____}   ", r"   {____}   ", r"   {____}   "],
        ],
        [
            [r"::::::::::::", r"::::::::::::", r"::::::::::::", r"::::::::::::", r"::::::::::::", r"::: _ww_ :::", r"::::\++/::::"],
            [r"::::::::::::", r"::::::::::::", r"::: __,,::::", r":::::<>:::::", r"::::UUUU::::", r"::: \  / :::", r"::::(  )::::"],
            [r"::::::::::::", r":::::():::::", r":: L   \~ ::", r":::::/\:::::", r"::::|  |::::", r"::: |  | :::", r"::::|  |::::"],
            [r"::::::::::::", r":::::{}:::::", r":::: ) ( :::", r"::::\  /::::", r"::::|  |::::", r"::: /  \ :::", r"::::/  \::::"],
            [r"::::::::::::", r"::::{__}::::", r":: {____} ::", r":::{____}:::", r":::{____}:::", r":: {____} ::", r":::{____}:::"],
        ],
    ],
    [
        [
            [r"            ", r"            ", r"            ", r"            ", r"            ", r"    _ww_    ", r"    \++/    "],
            [r"            ", r"            ", r"    __,,    ", r"     <>     ", r"    UUUU    ", r"    \##/    ", r"    (##)    "],
            [r"            ", r"     ()     ", r"   L###\~   ", r"     /\     ", r"    |##|    ", r"    |##|    ", r"    |##|    "],
            [r"            ", r"     ##     ", r"     )#(    ", r"    \##/    ", r"    |##|    ", r"    /##\    ", r"    /##\    "],
            [r"            ", r"    {##}    ", r"   {####}   ", r"   {####}   ", r"   {####}   ", r"   {####}   ", r"   {####}   "],
        ],
        [
            [r"::::::::::::", r"::::::::::::", r"::::::::::::", r"::::::::::::", r"::::::::::::", r"::: _ww_ :::", r"::::\++/::::"],
            [r"::::::::::::", r"::::::::::::", r"::: __,, :::", r":::::<>:::::", r"::::UUUU::::", r"::: \##/ :::", r"::::(##)::::"],
            [r"::::::::::::", r":::::():::::", r":: L###\~ ::", r":::::/\:::::", r"::: |##| :::", r"::: |##| :::", r"::::|##|::::"],
            [r"::::::::::::", r":::: ## ::::", r":::: )#( :::", r"::: \##/ :::", r"::: |##| :::", r"::: /##\ :::", r"::::/##\::::"],
            [r"::::::::::::", r"::: {##} :::", r":: {####} ::", r":: {####} ::", r":: {####} ::", r":: {####} ::", r":::{####}:::"],
        ],
    ],
];

// pub struct Chess {
//     board: [[u8; 8]; 8],
// }

pub fn print_piece(piece_color: usize, square_color: usize, piece: usize) {
    for i in 0..LAYERS {
        println!("{}", BOARD_ASCII[piece_color][square_color][i][piece]);
    }
}

pub fn sample_board() -> &'static str {
    r"
.-.================================================================================================.-.
[8]::::::::::::            ::::::::::::    _ww_    ::::\++/::::            ::::::::::::            | |
| |::::UUUU::::    __,,    :::::<>:::::    \  /    ::::(  )::::     <>     ::: __,,::::    UUUU    | |
| |::::|  |::::   L   \~   :::::/\:::::    |  |    ::::|  |::::     /\     :: L   \~ ::    |  |    | |
| |::::|  |::::     ) (    ::::\  /::::    /  \    ::::/  \::::    \  /    :::: ) ( :::    |  |    | |
| |:::{____}:::   {____}   :::{____}:::   {____}   :::{____}:::   {____}   :: {____} ::   {____}   | |
[7]            ::::::::::::            ::::::::::::            ::::::::::::            ::::::::::::| |
| |            ::::::::::::            ::::::::::::            ::::::::::::            ::::::::::::| |
| |     ()     :::::():::::     ()     :::::():::::     ()     :::::():::::     ()     :::::():::::| |
| |     {}     :::::{}:::::     {}     :::::{}:::::     {}     :::::{}:::::     {}     :::::{}:::::| |
| |    {__}    ::::{__}::::    {__}    ::::{__}::::    {__}    ::::{__}::::    {__}    ::::{__}::::| |
[6]::::::::::::            ::::::::::::            ::::::::::::            ::::::::::::            | |
| |::::::::::::            ::::::::::::            ::::::::::::            ::::::::::::            | |
| |::::::::::::            ::::::::::::            ::::::::::::            ::::::::::::            | |
| |::::::::::::            ::::::::::::            ::::::::::::            ::::::::::::            | |
| |::::::::::::            ::::::::::::            ::::::::::::            ::::::::::::            | |
[5]            ::::::::::::            ::::::::::::            ::::::::::::            ::::::::::::| |
| |            ::::::::::::            ::::::::::::            ::::::::::::            ::::::::::::| |
| |            ::::::::::::            ::::::::::::            ::::::::::::            ::::::::::::| |
| |            ::::::::::::            ::::::::::::            ::::::::::::            ::::::::::::| |
| |            ::::::::::::            ::::::::::::            ::::::::::::            ::::::::::::| |
[4]::::::::::::            ::::::::::::            ::::::::::::            ::::::::::::            | |
| |::::::::::::            ::::::::::::            ::::::::::::            ::::::::::::            | |
| |::::::::::::            ::::::::::::            ::::::::::::            ::::::::::::            | |
| |::::::::::::            ::::::::::::            ::::::::::::            ::::::::::::            | |
| |::::::::::::            ::::::::::::            ::::::::::::            ::::::::::::            | |
[3]            ::::::::::::            ::::::::::::            ::::::::::::            ::::::::::::| |
| |            ::::::::::::            ::::::::::::            ::::::::::::            ::::::::::::| |
| |            ::::::::::::            ::::::::::::            ::::::::::::            ::::::::::::| |
| |            ::::::::::::            ::::::::::::            ::::::::::::            ::::::::::::| |
| |            ::::::::::::            ::::::::::::            ::::::::::::            ::::::::::::| |
[2]::::::::::::            ::::::::::::            ::::::::::::            ::::::::::::            | |
| |::::::::::::            ::::::::::::            ::::::::::::            ::::::::::::            | |
| |:::: () ::::     ()     :::: () ::::     ()     :::: () ::::     ()     :::: () ::::     ()     | |
| |:::: ## ::::     ##     :::: ## ::::     ##     :::: ## ::::     ##     :::: ## ::::     ##     | |
| |::: {##} :::    {##}    ::: {##} :::    {##}    ::: {##} :::    {##}    ::: {##} :::    {##}    | |
[1]            ::::::::::::            ::: _ww_ :::    \++/    ::::::::::::            ::::::::::::| |
| |    UUUU    ::: __,, :::     <>     ::: \##/ :::    (##)    :::: <> ::::    __,,    ::: UUUU :::| |
| |    |##|    :: L###\~ ::     /\     ::: |##| :::    |##|    :::: /\ ::::   L###\~   ::: |##| :::| |
| |    |##|    :::: )#( :::    \##/    ::: /##\ :::    /##\    ::: \##/ :::     )#(    ::: |##| :::| |
| |   {####}   :: {####} ::   {####}   :: {####} ::   {####}   :: {####} ::   {####}   :: {####} ::| |
'-'=========[a]=========[b]=========[c]=========[d]=========[e]=========[f]=========[g]=========[h]'-'"
}
